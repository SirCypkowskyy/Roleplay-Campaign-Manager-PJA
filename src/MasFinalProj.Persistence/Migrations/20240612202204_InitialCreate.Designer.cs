// <auto-generated />
using System;
using MasFinalProj.Persistence.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasFinalProj.Persistence.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240612202204_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Campaign", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CampaignId");

                    b.Property<long?>("CampaignImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("GameCurrency")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsArchived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPublic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(52)
                        .HasColumnType("nvarchar(52)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignImageId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Characters.Character", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("CharacterId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Bio")
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("CharacterImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("Money")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(52)
                        .HasColumnType("nvarchar(52)");

                    b.Property<long?>("PlayerOwnerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CharacterImageId");

                    b.HasIndex("PlayerOwnerId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Characters.CharacterAttribute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("CharacterAttributeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CharacterId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterAttribute");

                    b.HasDiscriminator<string>("Discriminator").HasValue("CharacterAttribute");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Characters.CharacterRelationWith", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("CharacterRelationWithId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("FromCharacterId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("RelationValue")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<long>("ToCharacterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ToCharacterId");

                    b.HasIndex("FromCharacterId", "ToCharacterId")
                        .IsUnique();

                    b.ToTable("CharacterRelationsWith");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("MessageId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AuthorId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("CharacterAuthorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CharacterAuthorId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Note", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("NoteId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CampaignUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CharacterAttributeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CharacterId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignUserId");

                    b.HasIndex("CharacterAttributeId");

                    b.HasIndex("CharacterId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Users.CampaignUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("CampaignUserId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CampaignBio")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("CampaignId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CampaignNickname")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("CampaignUserType")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("CampaignUsers");

                    b.HasDiscriminator<string>("CampaignUserType").HasValue("CampaignUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Common.Image", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ImageId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Base64Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Checksum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageFormat")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Users.New.BlacklistedEmail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BlacklistedEmailId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(52)
                        .HasColumnType("nvarchar(52)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("BlacklistedEmails");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Users.New.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RefreshTokenId");

                    b.Property<DateTime>("ExpiryDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("Value")
                        .IsUnique();

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<string>("Description")
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<long?>("DiscordId")
                        .HasColumnType("bigint");

                    b.Property<string>("DiscordUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(52)
                        .HasColumnType("nvarchar(52)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<long?>("ProfileImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("ProfileImageId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = new Guid("4d247e62-5966-42f3-be78-40ff86a18304"),
                            Description = "Testowy użytkownik",
                            Email = "user@s24759masfinal.com",
                            IsActive = false,
                            PasswordHash = "6a+XneCh6rTjrASzNv6eqxJ5ESMUdH4z/l0VGEieU2s=",
                            PasswordSalt = "VSRGlNT2+p8PrYKNSnNOKw==",
                            Username = "BaseUser"
                        });
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Characters.Item", b =>
                {
                    b.HasBaseType("MasFinalProj.Domain.Models.Campaigns.Characters.CharacterAttribute");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MoneyValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("Item");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Characters.Stat", b =>
                {
                    b.HasBaseType("MasFinalProj.Domain.Models.Campaigns.Characters.CharacterAttribute");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("Stat");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Users.CampaignUserGameMaster", b =>
                {
                    b.HasBaseType("MasFinalProj.Domain.Models.Campaigns.Users.CampaignUser");

                    b.Property<string>("Storyline")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CampaignId");

                    b.HasIndex("UserId");

                    b.HasDiscriminator().HasValue("CampaignUserGameMaster");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Users.CampaignUserPlayer", b =>
                {
                    b.HasBaseType("MasFinalProj.Domain.Models.Campaigns.Users.CampaignUser");

                    b.HasIndex("CampaignId");

                    b.HasIndex("UserId");

                    b.HasDiscriminator().HasValue("CampaignUserPlayer");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Users.Moderator", b =>
                {
                    b.HasBaseType("MasFinalProj.Domain.Models.Users.User");

                    b.Property<DateTime>("StaffSinceUtc")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Moderator");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Users.Admin", b =>
                {
                    b.HasBaseType("MasFinalProj.Domain.Models.Users.Moderator");

                    b.Property<bool>("IsSuperUser")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Admin");

                    b.HasData(
                        new
                        {
                            Id = new Guid("edd21e0a-8193-445e-8cac-4c90f71f6549"),
                            Description = "Base admin account",
                            Email = "b.admin@s24759masfinal.com",
                            IsActive = false,
                            PasswordHash = "GRJjOOXAq+VsXGcMkd7WuM/UVoT++Rq06+iSq/KqQD4=",
                            PasswordSalt = "TZEWQPpM9B/0oauAX0qnrA==",
                            Username = "BaseAdmin",
                            StaffSinceUtc = new DateTime(2024, 6, 12, 20, 22, 4, 213, DateTimeKind.Utc).AddTicks(1094),
                            IsSuperUser = false
                        },
                        new
                        {
                            Id = new Guid("c9143eb1-2c7b-4211-b070-b6948e55b707"),
                            Description = "Moje konto do testowania logowania z Discord OAuth",
                            Email = "cypkowski@gmail.com",
                            IsActive = false,
                            PasswordHash = "GRJjOOXAq+VsXGcMkd7WuM/UVoT++Rq06+iSq/KqQD4=",
                            PasswordSalt = "TZEWQPpM9B/0oauAX0qnrA==",
                            Username = "SirCypkowskyy",
                            StaffSinceUtc = new DateTime(2024, 6, 12, 20, 22, 4, 213, DateTimeKind.Utc).AddTicks(1129),
                            IsSuperUser = true
                        });
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Campaign", b =>
                {
                    b.HasOne("MasFinalProj.Domain.Models.Common.Image", "CampaignImage")
                        .WithMany("CampaignsWithImage")
                        .HasForeignKey("CampaignImageId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CampaignImage");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Characters.Character", b =>
                {
                    b.HasOne("MasFinalProj.Domain.Models.Campaigns.Campaign", "Campaign")
                        .WithMany("Characters")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MasFinalProj.Domain.Models.Common.Image", "CharacterImage")
                        .WithMany("Characters")
                        .HasForeignKey("CharacterImageId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MasFinalProj.Domain.Models.Campaigns.Users.CampaignUserPlayer", "PlayerOwner")
                        .WithMany("ControlledCharacters")
                        .HasForeignKey("PlayerOwnerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Campaign");

                    b.Navigation("CharacterImage");

                    b.Navigation("PlayerOwner");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Characters.CharacterAttribute", b =>
                {
                    b.HasOne("MasFinalProj.Domain.Models.Campaigns.Characters.Character", "Character")
                        .WithMany("CharacterAttributes")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Characters.CharacterRelationWith", b =>
                {
                    b.HasOne("MasFinalProj.Domain.Models.Campaigns.Characters.Character", "FromCharacter")
                        .WithMany("RelationsFromCharacterToOthers")
                        .HasForeignKey("FromCharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MasFinalProj.Domain.Models.Campaigns.Characters.Character", "ToCharacter")
                        .WithMany("RelationsFromOthersToCharacter")
                        .HasForeignKey("ToCharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromCharacter");

                    b.Navigation("ToCharacter");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Message", b =>
                {
                    b.HasOne("MasFinalProj.Domain.Models.Campaigns.Users.CampaignUser", "Author")
                        .WithMany("Messages")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MasFinalProj.Domain.Models.Campaigns.Campaign", "Campaign")
                        .WithMany("Messages")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasFinalProj.Domain.Models.Campaigns.Characters.Character", "CharacterAuthor")
                        .WithMany("Messages")
                        .HasForeignKey("CharacterAuthorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Author");

                    b.Navigation("Campaign");

                    b.Navigation("CharacterAuthor");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Note", b =>
                {
                    b.HasOne("MasFinalProj.Domain.Models.Campaigns.Users.CampaignUser", "CampaignUser")
                        .WithMany("Notes")
                        .HasForeignKey("CampaignUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasFinalProj.Domain.Models.Campaigns.Characters.CharacterAttribute", "CharacterAttribute")
                        .WithMany("Notes")
                        .HasForeignKey("CharacterAttributeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MasFinalProj.Domain.Models.Campaigns.Characters.Character", "Character")
                        .WithMany("Notes")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("CampaignUser");

                    b.Navigation("Character");

                    b.Navigation("CharacterAttribute");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Users.New.RefreshToken", b =>
                {
                    b.HasOne("MasFinalProj.Domain.Models.Users.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Users.User", b =>
                {
                    b.HasOne("MasFinalProj.Domain.Models.Common.Image", "ProfileImage")
                        .WithMany("UsersWithImage")
                        .HasForeignKey("ProfileImageId");

                    b.Navigation("ProfileImage");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Users.CampaignUserGameMaster", b =>
                {
                    b.HasOne("MasFinalProj.Domain.Models.Campaigns.Campaign", "Campaign")
                        .WithMany("CampaignGameMaster")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasFinalProj.Domain.Models.Users.User", "User")
                        .WithMany("CampaignsAsGameMaster")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Users.CampaignUserPlayer", b =>
                {
                    b.HasOne("MasFinalProj.Domain.Models.Campaigns.Campaign", "Campaign")
                        .WithMany("CampaignPlayers")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasFinalProj.Domain.Models.Users.User", "User")
                        .WithMany("CampaignsAsPlayer")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Campaign", b =>
                {
                    b.Navigation("CampaignGameMaster");

                    b.Navigation("CampaignPlayers");

                    b.Navigation("Characters");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Characters.Character", b =>
                {
                    b.Navigation("CharacterAttributes");

                    b.Navigation("Messages");

                    b.Navigation("Notes");

                    b.Navigation("RelationsFromCharacterToOthers");

                    b.Navigation("RelationsFromOthersToCharacter");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Characters.CharacterAttribute", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Users.CampaignUser", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Notes");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Common.Image", b =>
                {
                    b.Navigation("CampaignsWithImage");

                    b.Navigation("Characters");

                    b.Navigation("UsersWithImage");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Users.User", b =>
                {
                    b.Navigation("CampaignsAsGameMaster");

                    b.Navigation("CampaignsAsPlayer");

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("MasFinalProj.Domain.Models.Campaigns.Users.CampaignUserPlayer", b =>
                {
                    b.Navigation("ControlledCharacters");
                });
#pragma warning restore 612, 618
        }
    }
}
